/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.mantenimiento;

import dominio.Camion;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import sistema.SistemaMantenimiento;
import sistema.SistemaUsuarios;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class MantenimientoCamiones extends javax.swing.JDialog {

    private final SistemaMantenimiento sis;
    private Camion camion;
    private List<Camion> camiones;
    /**
     * Creates new form MantenimientoCamiones
     */
    public MantenimientoCamiones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sis = SistemaMantenimiento.getInstance();
        camion = new Camion();
        actualizarListaCamiones();
        jTextFieldMatriculaCamion.requestFocus();
        jTextFieldMatriculaCamion.selectAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSalir = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCamiones = new javax.swing.JList();
        jButtonEliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldMatriculaCamion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Camiones");

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jButtonGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonGuardarKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Camiones");

        jListCamiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListCamionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListCamiones);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jLabel4.setText("Matricula: ");

        jTextFieldMatriculaCamion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMatriculaCamionKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldMatriculaCamion, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldMatriculaCamion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jListCamionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCamionesMouseClicked
        // TODO add your handling code here:
        int seleccionado = jListCamiones.getSelectedIndex();
        if(seleccionado != -1){
            camion = camiones.get(seleccionado);
            jTextFieldMatriculaCamion.setText(camion.getMatricula());
        }
    }//GEN-LAST:event_jListCamionesMouseClicked

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        if(camion.getMatricula() == null){
            JOptionPane.showMessageDialog(this, "Para eliminar un cami贸n, primero debes seleccionarlo de la lista.","Informaci贸n",JOptionPane.INFORMATION_MESSAGE);
        } else {
            try{
                sis.eliminarCamion(camion);
                vaciarCampos();
                camion = new Camion();
                actualizarListaCamiones();
            }
            catch (HibernateException e){
                JOptionPane.showMessageDialog(this, "Error al eliminar el cami贸n." + "\n\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                String stakTrace = util.Util.obtenerStackTraceEnString(ex);
                SistemaUsuarios.getInstance().registrarExcepcion(ex.toString(), stakTrace);
                JOptionPane.showMessageDialog(this, "Error al eliminar el cami贸n." + "\n\n" + ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonGuardarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonGuardar.doClick();
        }
    }//GEN-LAST:event_jButtonGuardarKeyPressed

    private void jTextFieldMatriculaCamionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMatriculaCamionKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonGuardar.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldMatriculaCamionKeyPressed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if("".equals(jTextFieldMatriculaCamion.getText().trim())){
            JOptionPane.showMessageDialog(this, "El cami贸n debe tener una matr铆cula.","Informaci贸n",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldMatriculaCamion.requestFocus();
            jTextFieldMatriculaCamion.selectAll();
        } else {
            try{
            //Verifico que no exista un chofer con ese nombre
            SistemaMantenimiento sm = SistemaMantenimiento.getInstance();
            if (camion.getMatricula() == null) {
                //Aca se agrega un nuevo chofer
                //Verifico que sea un nombre valido, que no este repetido
                if(!codigoValido(jTextFieldMatriculaCamion.getText())){
                    JOptionPane.showMessageDialog(this, "Ya existe un cami贸n con esa matr铆cula.", "Informaci贸n", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldMatriculaCamion.requestFocus();
                    jTextFieldMatriculaCamion.selectAll();
                } else {
                    
                    if (sm.agregarCamion(jTextFieldMatriculaCamion.getText())) {
                        jTextFieldMatriculaCamion.setText("");
                        camion = new Camion();
                        actualizarListaCamiones();
                        jTextFieldMatriculaCamion.requestFocus();
                        jTextFieldMatriculaCamion.selectAll();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al guardar el cami贸n.","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                //Aca se actualiza un camion existente
                //Chequeo se quiere cambiar la matricula
                if(!camion.getMatricula().equals(jTextFieldMatriculaCamion.getText())){
                    //Si quiere cambiar el nombre, verifico que sea un nombre valido
                    if (!codigoValido(jTextFieldMatriculaCamion.getText())) {
                        JOptionPane.showMessageDialog(this, "Ya existe un cami贸n con esa matr铆cula.", "Informaci贸n", JOptionPane.INFORMATION_MESSAGE);
                        jTextFieldMatriculaCamion.requestFocus();
                        jTextFieldMatriculaCamion.selectAll();
                    } else {
                        //Si el nombre es valido actualizo los datos
                        camion.setMatricula(jTextFieldMatriculaCamion.getText());
                        sis.actualizarCamion(camion);
                        jTextFieldMatriculaCamion.setText("");
                        camion = new Camion();
                        actualizarListaCamiones();
                        jTextFieldMatriculaCamion.requestFocus();
                        jTextFieldMatriculaCamion.selectAll();
                    }
                } else {
                    //Si no quiere cambiar el nombre todo bien, se guarda con el mismo nombre
                    camion.setMatricula(jTextFieldMatriculaCamion.getText());
                    sis.actualizarCamion(camion);
                    jTextFieldMatriculaCamion.setText("");
                    camion = new Camion();
                    actualizarListaCamiones();
                    jTextFieldMatriculaCamion.requestFocus();
                    jTextFieldMatriculaCamion.selectAll();
                }
            }
        } catch (Exception e) {
            String stakTrace = util.Util.obtenerStackTraceEnString(e);
            SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
            JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
        }
        } 
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void actualizarListaCamiones(){
        camiones = sis.devolverCamiones();
        
        DefaultListModel modelo = new DefaultListModel();
        for (Camion c : camiones) {
            modelo.addElement(c);
        }
        
        jListCamiones.setModel(modelo);
    }
    
    private void vaciarCampos(){
        jTextFieldMatriculaCamion.setText("");
    }
    
    private boolean codigoValido(String cod){
        boolean retorno = true;
        for(Camion c:camiones){
            if(c.getMatricula().equals(cod)){
                retorno = false;
                break;
            }
        }
        return retorno;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoCamiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoCamiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoCamiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoCamiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MantenimientoCamiones dialog = new MantenimientoCamiones(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jListCamiones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldMatriculaCamion;
    // End of variables declaration//GEN-END:variables
}
