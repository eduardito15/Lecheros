/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.mantenimiento;

import dominio.RubroGasto;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import sistema.SistemaMantenimiento;
import sistema.SistemaUsuarios;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class MantenimientoRubroGasto extends javax.swing.JDialog {

    private final SistemaMantenimiento sis;
    private RubroGasto rubroGasto;
    private List<RubroGasto> rubrosGastos;
    /**
     * Creates new form MantenimientoFamiliaDeProductos
     */
    public MantenimientoRubroGasto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sis = SistemaMantenimiento.getInstance();
        rubroGasto = new RubroGasto();
        actualizarListaRubrosDeGastos();
        jTextFieldCodigoRurboGasto.requestFocus();
        jTextFieldCodigoRurboGasto.selectAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextFieldNombreRubroGasto = new javax.swing.JTextField();
        jButtonSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigoRurboGasto = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListRubrosDeGastos = new javax.swing.JList();
        jButtonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento de Rubros de Gastos");

        jLabel3.setText("Nombre:");

        jTextFieldNombreRubroGasto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNombreRubroGastoKeyPressed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        jButtonSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonSalirKeyPressed(evt);
            }
        });

        jLabel2.setText("Codigo: ");

        jTextFieldCodigoRurboGasto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoRurboGastoKeyPressed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jButtonGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonGuardarKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Rubros de Gastos");

        jListRubrosDeGastos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListRubrosDeGastosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListRubrosDeGastos);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jButtonEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonEliminarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCodigoRurboGasto, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNombreRubroGasto, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldCodigoRurboGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldNombreRubroGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if("".equals(jTextFieldCodigoRurboGasto.getText().trim())){
            JOptionPane.showMessageDialog(this, "El rubro debe tener un codigo.","Informaci√≥n",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigoRurboGasto.requestFocus();
            jTextFieldCodigoRurboGasto.selectAll();
        } else {
            if("".equals(jTextFieldNombreRubroGasto.getText().trim())){
                JOptionPane.showMessageDialog(this, "El rubro debe tener un nombre.","Informaci√≥n",JOptionPane.INFORMATION_MESSAGE);
                jTextFieldNombreRubroGasto.requestFocus();
                jTextFieldNombreRubroGasto.selectAll();
            } else {
                //Aca entra a guardar un rubro de gasto
                try {
                    SistemaMantenimiento sm = SistemaMantenimiento.getInstance();
                    if (rubroGasto.getNombre() == null) {
                        //Es un rubro gasto nuevo
                        if(!codigoValido(Integer.parseInt(jTextFieldCodigoRurboGasto.getText().trim()))){
                            //El codigo no es valido
                            JOptionPane.showMessageDialog(this, "Ya existe un rubro de gasto con ese codigo.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                            jTextFieldCodigoRurboGasto.requestFocus();
                            jTextFieldCodigoRurboGasto.selectAll();
                        } else {
                            //El codigo es valido. Verifico el nombre
                            if(!nombreValido(jTextFieldNombreRubroGasto.getText())){
                                //El nombre no es valido
                                JOptionPane.showMessageDialog(this, "Ya existe un rubro con ese nombre.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                                jTextFieldNombreRubroGasto.requestFocus();
                                jTextFieldNombreRubroGasto.selectAll();
                            } else {
                                //El nombre es valido. Agrego la nueva familia
                                int codigo = Integer.parseInt(jTextFieldCodigoRurboGasto.getText().trim());
                                if (sm.agregarRubroGasto(codigo, jTextFieldNombreRubroGasto.getText())) {
                                    jTextFieldCodigoRurboGasto.setText("");
                                    jTextFieldNombreRubroGasto.setText("");
                                    rubroGasto = new RubroGasto();
                                    actualizarListaRubrosDeGastos();
                                    jTextFieldCodigoRurboGasto.requestFocus();
                                    jTextFieldCodigoRurboGasto.selectAll();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Error al ingresar el nuevo rubro de gasto.","Error",JOptionPane.ERROR_MESSAGE);
                                }
                            }
                        }
                    } else {
                        //Aca entra para actualizar un rubro gasto
                        //Verifico si quiere modifcar el codigo
                        if(!(rubroGasto.getCodigo() == Integer.parseInt(jTextFieldCodigoRurboGasto.getText()))){
                            //Quiere modificar el codigo
                            //Verifico que el codigo sea valido.
                            if(!codigoValido(Integer.parseInt(jTextFieldCodigoRurboGasto.getText().trim()))){
                                //El codigo no es valido
                                JOptionPane.showMessageDialog(this, "Ya existe un rubro de gasto con ese codigo.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                                jTextFieldCodigoRurboGasto.requestFocus();
                                jTextFieldCodigoRurboGasto.selectAll();
                            } else {
                                //El codigo que quiere modificar es valido
                                //Verifico que quiera cambiar el nombre
                                if(!rubroGasto.getNombre().equals(jTextFieldNombreRubroGasto.getText())){
                                    //Quiere modificar el nombre
                                    //Verifico que el nuevo nombre sea valido
                                    if(!nombreValido(jTextFieldNombreRubroGasto.getText())){
                                        //El nuevo nombre no es valido
                                        JOptionPane.showMessageDialog(this, "Ya existe un rubro de gasto con ese nombre.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                                        jTextFieldNombreRubroGasto.requestFocus();
                                        jTextFieldNombreRubroGasto.selectAll();
                                    } else {
                                        //El nombre es valido
                                        rubroGasto.setCodigo(Integer.parseInt(jTextFieldCodigoRurboGasto.getText()));
                                        rubroGasto.setNombre(jTextFieldNombreRubroGasto.getText());
                                        sis.actualizarRubroGasto(rubroGasto);
                                    
                                        jTextFieldCodigoRurboGasto.setText("");
                                        jTextFieldNombreRubroGasto.setText("");
                                        rubroGasto = new RubroGasto();
                                        actualizarListaRubrosDeGastos();
                                        jTextFieldCodigoRurboGasto.requestFocus();
                                        jTextFieldCodigoRurboGasto.selectAll();
                                    }
                                } else {
                                    //No quiere modificar el nombre y el codigo es valido
                                    rubroGasto.setCodigo(Integer.parseInt(jTextFieldCodigoRurboGasto.getText()));
                                    rubroGasto.setNombre(jTextFieldNombreRubroGasto.getText());
                                    sis.actualizarRubroGasto(rubroGasto);
                                    jTextFieldCodigoRurboGasto.setText("");
                                    jTextFieldNombreRubroGasto.setText("");
                                    rubroGasto = new RubroGasto();
                                    actualizarListaRubrosDeGastos();
                                    jTextFieldCodigoRurboGasto.requestFocus();
                                    jTextFieldCodigoRurboGasto.selectAll();
                                }
                            }
                        } else {
                            //No quiere modificar el codigo
                            //Verifico si quiere modificar el nombre
                            if(!rubroGasto.getNombre().equals(jTextFieldNombreRubroGasto.getText())){
                                //Quiere modificar el nombre
                                //Verifico que el nombre sea valido
                                if (!nombreValido(jTextFieldNombreRubroGasto.getText())) {
                                    //El nuevo nombre no es valido
                                    JOptionPane.showMessageDialog(this, "Ya existe una familia con ese nombre.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                                    jTextFieldNombreRubroGasto.requestFocus();
                                    jTextFieldNombreRubroGasto.selectAll();
                                } else {
                                    //El nombre es valido
                                    rubroGasto.setCodigo(Integer.parseInt(jTextFieldCodigoRurboGasto.getText()));
                                    rubroGasto.setNombre(jTextFieldNombreRubroGasto.getText());
                                    sis.actualizarRubroGasto(rubroGasto);
                                    jTextFieldCodigoRurboGasto.setText("");
                                    jTextFieldNombreRubroGasto.setText("");
                                    rubroGasto = new RubroGasto();
                                    actualizarListaRubrosDeGastos();
                                    jTextFieldCodigoRurboGasto.requestFocus();
                                    jTextFieldCodigoRurboGasto.selectAll();
                                }
                            } else {
                                //No quiere modificar el nombre
                                rubroGasto.setCodigo(Integer.parseInt(jTextFieldCodigoRurboGasto.getText()));
                                rubroGasto.setNombre(jTextFieldNombreRubroGasto.getText());
                                sis.actualizarRubroGasto(rubroGasto);
                                jTextFieldCodigoRurboGasto.setText("");
                                jTextFieldNombreRubroGasto.setText("");
                                rubroGasto = new RubroGasto();
                                actualizarListaRubrosDeGastos();
                                jTextFieldCodigoRurboGasto.requestFocus();
                                jTextFieldCodigoRurboGasto.selectAll();
                            }
                            
                        }
                    }
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(this, "El codigo debe ser un numero entero", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldCodigoRurboGasto.requestFocus();
                    jTextFieldCodigoRurboGasto.selectAll();
                } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jListRubrosDeGastosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListRubrosDeGastosMouseClicked
        // TODO add your handling code here:
        int seleccionado = jListRubrosDeGastos.getSelectedIndex();
        if(seleccionado != -1){
            rubroGasto = rubrosGastos.get(seleccionado);
            jTextFieldCodigoRurboGasto.setText(Integer.toString(rubroGasto.getCodigo()));
            jTextFieldNombreRubroGasto.setText(rubroGasto.getNombre());
        }
    }//GEN-LAST:event_jListRubrosDeGastosMouseClicked

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        try{
            if (rubroGasto.getNombre() == null) {
                JOptionPane.showMessageDialog(this, "Para eliminar rubro de gastos, primero debes seleccionarla de la lista.");
            } else {
                sis.eliminarRubroGasto(rubroGasto);
                                    
                jTextFieldCodigoRurboGasto.setText("");
                jTextFieldNombreRubroGasto.setText("");
                rubroGasto = new RubroGasto();
                actualizarListaRubrosDeGastos();
            }
        }
        catch (HibernateException e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el rubro de gasto." + "\n\n" + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            String stakTrace = util.Util.obtenerStackTraceEnString(ex);
            SistemaUsuarios.getInstance().registrarExcepcion(ex.toString(), stakTrace);
            JOptionPane.showMessageDialog(this, "Error al eliminar el rubro de gasto." + "\n\n" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTextFieldCodigoRurboGastoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoRurboGastoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTextFieldNombreRubroGasto.requestFocus();
            jTextFieldNombreRubroGasto.selectAll();
        }
    }//GEN-LAST:event_jTextFieldCodigoRurboGastoKeyPressed

    private void jTextFieldNombreRubroGastoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreRubroGastoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonGuardar.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNombreRubroGastoKeyPressed

    private void jButtonGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonGuardarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonGuardar.doClick();
        }
    }//GEN-LAST:event_jButtonGuardarKeyPressed

    private void jButtonEliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonEliminarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonEliminar.doClick();
        }
    }//GEN-LAST:event_jButtonEliminarKeyPressed

    private void jButtonSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSalirKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonSalir.doClick();
        }
    }//GEN-LAST:event_jButtonSalirKeyPressed

    private void actualizarListaRubrosDeGastos(){
        rubrosGastos = sis.devolverRubrosGastos();
        
        DefaultListModel modelo = new DefaultListModel();
        for (RubroGasto rg : rubrosGastos) {
            modelo.addElement(rg);
        }
        
        jListRubrosDeGastos.setModel(modelo);
    }
    
    private boolean codigoValido(int codigo){
        boolean retorno = true;
        for(RubroGasto rg : rubrosGastos){
            if(rg.getCodigo() == codigo){
                retorno = false;
                break;
            }
        }
        return retorno;
    }
    
    private boolean nombreValido(String nombre){
        boolean retorno = true;
        for(RubroGasto rg : rubrosGastos){
            if(rg.getNombre().equals(nombre)){
                retorno = false;
                break;
            }
        }
        return retorno;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoRubroGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoRubroGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoRubroGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoRubroGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MantenimientoRubroGasto dialog = new MantenimientoRubroGasto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListRubrosDeGastos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCodigoRurboGasto;
    private javax.swing.JTextField jTextFieldNombreRubroGasto;
    // End of variables declaration//GEN-END:variables
}
