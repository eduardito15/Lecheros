/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.mantenimiento;

import dominio.Articulo;
import dominio.FamiliaDeProducto;
import dominio.Iva;
import dominio.Precio;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import sistema.SistemaMantenimiento;
import sistema.SistemaMantenimientoArticulos;
import sistema.SistemaUsuarios;
import ui.AutoCompletion;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class MantenimientoArticulos extends javax.swing.JFrame {

    private final SistemaMantenimiento sisMan;
    private final SistemaMantenimientoArticulos sis;
    private Articulo articulo;
    
    private final List<Iva> ivas;
    
    private final DecimalFormat df;
    private DefaultTableModel modelo;
    /**
     * Creates new form MantenimientoArticulos
     */
    public MantenimientoArticulos(java.awt.Frame parent, boolean modal) {
        //super(parent, modal);
        initComponents();
        sisMan = SistemaMantenimiento.getInstance();
        sis = SistemaMantenimientoArticulos.getInstance();
        //Cargo el combo de los ivas
        ivas = sisMan.devolverIvas();
        for(Iva i : ivas){
            jComboBoxIvas.addItem(i);
        }
        //Cargo el combo de las familias
        List<FamiliaDeProducto> familias = sisMan.devolverFamiliaDeProductos();
        for(FamiliaDeProducto fp : familias){
            jComboBoxFamilias.addItem(fp);
        }
        AutoCompletion.enable(jComboBoxFamilias);
        df = new DecimalFormat("0.00");
        inicializarTabla();
    }

    
    private void inicializarTabla(){
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelo.addColumn("Fecha");
        modelo.addColumn("Precio Compra");
        modelo.addColumn("Precio Venta");
        
        jTablePrecios.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCodigoArticulo = new javax.swing.JTextField();
        jTextFieldDescripcionArticulo = new javax.swing.JTextField();
        jComboBoxIvas = new javax.swing.JComboBox();
        jComboBoxFamilias = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrecios = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jButtonNuevoPrecio = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonBuscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButtonEliminar = new javax.swing.JButton();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento de Artículos");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Precios");

        jLabel2.setText("Codigo:");

        jLabel3.setText("Descripción:");

        jLabel4.setText("Iva:");

        jLabel5.setText("Familia:");

        jTextFieldCodigoArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoArticuloKeyPressed(evt);
            }
        });

        jTextFieldDescripcionArticulo.setEnabled(false);
        jTextFieldDescripcionArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDescripcionArticuloKeyPressed(evt);
            }
        });

        jComboBoxIvas.setEnabled(false);
        jComboBoxIvas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxIvasKeyPressed(evt);
            }
        });

        jComboBoxFamilias.setEnabled(false);
        jComboBoxFamilias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFamiliasKeyPressed(evt);
            }
        });

        jTablePrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Precio Compra", "Precio Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePrecios);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("Artículos");

        jButtonNuevoPrecio.setText("Nuevo Precio");
        jButtonNuevoPrecio.setEnabled(false);
        jButtonNuevoPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoPrecioActionPerformed(evt);
            }
        });
        jButtonNuevoPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonNuevoPrecioKeyPressed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jButtonGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonGuardarKeyPressed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jButtonBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonBuscarKeyPressed(evt);
            }
        });

        jLabel8.setText("* Los Precios ingresados son sin impuestos.");

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDescripcionArticulo)
                    .addComponent(jComboBoxIvas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxFamilias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldCodigoArticulo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBuscar)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addGap(226, 226, 226))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButtonNuevoPrecio))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCodigoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDescripcionArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxIvas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxFamilias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonEliminar))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonNuevoPrecio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoArticuloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoArticuloKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            if("".equals(jTextFieldCodigoArticulo.getText())){
                VentanaBuscadorArticulos vba = new VentanaBuscadorArticulos(this, true);
                vba.setVisible(true);
                if(vba.getArticuloSeleccionado() != null) { 
                    jTextFieldCodigoArticulo.setText(Long.toString(vba.getArticuloSeleccionado().getCodigo()));
                }
            } else {
                inicializarTabla();
                try {
                    int codigo = Integer.parseInt(jTextFieldCodigoArticulo.getText());
                    articulo = sis.devolverArticuloPorCodigo(codigo);
                    if (articulo == null) {
                        int resp = JOptionPane.showConfirmDialog(this, "Queres crear un nuevo artículo con el codigo: " + Integer.toString(codigo) + "?", "Información", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                        if (resp == JOptionPane.YES_OPTION) {
                            //Quiere crear un nuevo articulo asi que le desbloqueo los cuadros de texto, botones.
                            articulo = null;
                            jTextFieldDescripcionArticulo.setText("");
                            jComboBoxIvas.setSelectedIndex(0);
                            jComboBoxFamilias.setSelectedIndex(0);
                            inicializarTabla();
                            jTextFieldDescripcionArticulo.setEnabled(true);
                            jComboBoxIvas.setEnabled(true);
                            jComboBoxFamilias.setEnabled(true);
                            jButtonGuardar.setEnabled(true);
                            jButtonSalir.setEnabled(true);
                            //jButtonNuevoPrecio.setEnabled(true);
                            jTextFieldDescripcionArticulo.requestFocus();
                        } else {
                            jTextFieldCodigoArticulo.requestFocus();
                            jTextFieldCodigoArticulo.selectAll();
                        }
                    } else {
                        jTextFieldDescripcionArticulo.setText(articulo.getDescripcion());
                        int indiceIva = devolverIndiceIva(articulo);
                        jComboBoxIvas.setSelectedIndex(indiceIva);
                        jComboBoxFamilias.setSelectedItem(articulo.getFamilia());
                        cargarPrecios();
                        jTextFieldDescripcionArticulo.setEnabled(true);
                        jComboBoxIvas.setEnabled(true);
                        jComboBoxFamilias.setEnabled(true);
                        jButtonGuardar.setEnabled(true);
                        jButtonSalir.setEnabled(true);
                        jButtonNuevoPrecio.setEnabled(true);
                        jButtonEliminar.setEnabled(true);
                        jTextFieldDescripcionArticulo.requestFocus();
                    }
                } catch (NumberFormatException ne) {
                    ne.printStackTrace();
                    JOptionPane.showMessageDialog(this, "El codigo debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldCodigoArticulo.requestFocus();
                    jTextFieldCodigoArticulo.selectAll();
                } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoArticuloKeyPressed

    public int devolverIndiceIva(Articulo a){
        int retorno = 0;
        for(int i = 0; i < ivas.size(); i++){
            Iva iva = ivas.get(i);
            if(iva.equals(a.getIva())){
                retorno = i;
            }
        }
        return retorno;
    }
    
    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if("".equals(jTextFieldCodigoArticulo.getText().trim())){
            JOptionPane.showMessageDialog(this, "El artículo debe tener un codigo","Información",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigoArticulo.requestFocus();
            jTextFieldCodigoArticulo.selectAll();
        } else {
            if("".equals(jTextFieldDescripcionArticulo.getText().trim())){
                JOptionPane.showMessageDialog(this, "El artículo debe tener una descripción", "Información", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldDescripcionArticulo.requestFocus();
                jTextFieldDescripcionArticulo.selectAll();
            } else {
                try{
                    if (articulo == null) {
                        //Quiere crear un articulo nuevo.
                        articulo = new Articulo();
                        articulo.setCodigo(Integer.parseInt(jTextFieldCodigoArticulo.getText()));
                        articulo.setDescripcion(jTextFieldDescripcionArticulo.getText());
                        articulo.setIva((Iva)jComboBoxIvas.getSelectedItem());
                        articulo.setFamilia((FamiliaDeProducto)jComboBoxFamilias.getSelectedItem());
                        if(articulo.getPrecios().size()==0){
                            //Es un articulo nuevo sin precio
                            int resp = JOptionPane.showConfirmDialog(this, "Para guardar un articulo debe tener precio. Crear precio nuevo ahora?","Pregunta",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                            if(resp == JOptionPane.YES_OPTION){
                                MantenimientoPrecios mp = new MantenimientoPrecios(null, true);
                                mp.setArticulo(articulo);
                                mp.setVisible(true);
                            } 
                        }
                    } else {
                    //Quiere guardar un articulo ya existente
                        if(articulo.getCodigo()!=Integer.parseInt(jTextFieldCodigoArticulo.getText())){
                            //Quiere modificar el codigo del articulo
                            int resp = JOptionPane.showConfirmDialog(this, "Seguro que queres modificar el codigo del articulo?","Pregunta",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                            if(resp == JOptionPane.YES_OPTION){
                                //Si quiere modificar el codigo del articulo
                                Articulo a = sis.devolverArticuloPorCodigo(Integer.parseInt(jTextFieldCodigoArticulo.getText()));
                                if(a == null){
                                    // No existe ningun articulo con ese codigo, entonces lo modifico lo mas bien
                                    articulo.setCodigo(Integer.parseInt(jTextFieldCodigoArticulo.getText()));
                                    articulo.setDescripcion(jTextFieldDescripcionArticulo.getText());
                                    articulo.setIva((Iva) jComboBoxIvas.getSelectedItem());
                                    articulo.setFamilia((FamiliaDeProducto) jComboBoxFamilias.getSelectedItem());
                                    if (sis.actualizarArticulo(articulo)) {
                                        articulo = null;
                                        jTextFieldCodigoArticulo.setText("");
                                        jTextFieldDescripcionArticulo.setText("");
                                        jComboBoxIvas.setSelectedIndex(0);
                                        jComboBoxFamilias.setSelectedIndex(0);
                                        inicializarTabla();
                                        jTextFieldDescripcionArticulo.setEnabled(false);
                                        jComboBoxIvas.setEnabled(false);
                                        jComboBoxFamilias.setEnabled(false);
                                        jButtonGuardar.setEnabled(false);
                                        jButtonSalir.setEnabled(true);
                                        jButtonNuevoPrecio.setEnabled(false);
                                        jTextFieldCodigoArticulo.requestFocus();
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Error al guardar el artículo.", "Error", JOptionPane.ERROR_MESSAGE);
                                    }
                                } else {
                                    //Ya existe un articulo con ese codigo
                                    JOptionPane.showMessageDialog(this, "Ya existe un artículo con ese codigo.", "Información", JOptionPane.INFORMATION_MESSAGE);
                                    jTextFieldCodigoArticulo.requestFocus();
                                    jTextFieldCodigoArticulo.selectAll();
                                }
                            } else {
                                //No quiere modificar el codigo del articulo
                                articulo.setDescripcion(jTextFieldDescripcionArticulo.getText());
                                articulo.setIva((Iva) jComboBoxIvas.getSelectedItem());
                                articulo.setFamilia((FamiliaDeProducto) jComboBoxFamilias.getSelectedItem());
                                if (sis.actualizarArticulo(articulo)) {
                                    articulo = null;
                                    jTextFieldCodigoArticulo.setText("");
                                    jTextFieldDescripcionArticulo.setText("");
                                    jComboBoxIvas.setSelectedIndex(0);
                                    jComboBoxFamilias.setSelectedIndex(0);
                                    inicializarTabla();
                                    jTextFieldDescripcionArticulo.setEnabled(false);
                                    jComboBoxIvas.setEnabled(false);
                                    jComboBoxFamilias.setEnabled(false);
                                    jButtonGuardar.setEnabled(false);
                                    jButtonSalir.setEnabled(true);
                                    jButtonNuevoPrecio.setEnabled(false);
                                    jTextFieldCodigoArticulo.requestFocus();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Error al guardar el artículo.", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                        } else {
                            //No Quiere modificar el codigo del articulo
                            articulo.setDescripcion(jTextFieldDescripcionArticulo.getText());
                            articulo.setIva((Iva)jComboBoxIvas.getSelectedItem());
                            articulo.setFamilia((FamiliaDeProducto)jComboBoxFamilias.getSelectedItem());
                            if (sis.actualizarArticulo(articulo)) {
                                articulo = null;
                                jTextFieldCodigoArticulo.setText("");
                                jTextFieldDescripcionArticulo.setText("");
                                jComboBoxIvas.setSelectedIndex(0);
                                jComboBoxFamilias.setSelectedIndex(0);
                                inicializarTabla();
                                jTextFieldDescripcionArticulo.setEnabled(false);
                                jComboBoxIvas.setEnabled(false);
                                jComboBoxFamilias.setEnabled(false);
                                jButtonGuardar.setEnabled(false);
                                jButtonSalir.setEnabled(true);
                                jButtonNuevoPrecio.setEnabled(false);
                                jTextFieldCodigoArticulo.requestFocus();
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al guardar el artículo.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        
                    }
                }
                catch (NumberFormatException exp){
                    exp.printStackTrace();
                    JOptionPane.showMessageDialog(this, "El codigo debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldCodigoArticulo.requestFocus();
                    jTextFieldCodigoArticulo.selectAll();
                } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        inicializarTabla();
        if("".equals(jTextFieldCodigoArticulo.getText())){
            JOptionPane.showMessageDialog(this, "Ingresa un codigo para buscar.", "Información", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigoArticulo.requestFocus();
            jTextFieldCodigoArticulo.selectAll();
        } else {
            try {
                int codigo = Integer.parseInt(jTextFieldCodigoArticulo.getText());
                articulo = sis.devolverArticuloPorCodigo(codigo);
                if (articulo == null) {
                    int resp = JOptionPane.showConfirmDialog(this, "Queres crear un nuevo artículo con el codigo: " + Integer.toString(codigo) + "?", "Información", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (resp == JOptionPane.YES_OPTION) {
                        //Quiere crear un nuevo articulo asi que le desbloqueo los cuadros de texto, botones.
                        jTextFieldDescripcionArticulo.setEnabled(true);
                        jComboBoxIvas.setEnabled(true);
                        jComboBoxFamilias.setEnabled(true);
                        jButtonGuardar.setEnabled(true);
                        jButtonSalir.setEnabled(true);
                        jButtonNuevoPrecio.setEnabled(true);
                    } else {
                        jTextFieldCodigoArticulo.requestFocus();
                        jTextFieldCodigoArticulo.selectAll();
                    }
                } else {
                    jTextFieldDescripcionArticulo.setText(articulo.getDescripcion());
                    jComboBoxIvas.setSelectedItem(articulo.getIva());
                    jComboBoxFamilias.setSelectedItem(articulo.getFamilia());
                    cargarPrecios();
                    jTextFieldDescripcionArticulo.setEnabled(true);
                    jComboBoxIvas.setEnabled(true);
                    jComboBoxFamilias.setEnabled(true);
                    jButtonGuardar.setEnabled(true);
                    jButtonSalir.setEnabled(true);
                    jButtonNuevoPrecio.setEnabled(true);
                    jTextFieldDescripcionArticulo.requestFocus();
                }
            } catch (NumberFormatException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "El codigo debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldCodigoArticulo.requestFocus();
                jTextFieldCodigoArticulo.selectAll();
            } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jTextFieldDescripcionArticuloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescripcionArticuloKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            if("".equals(jTextFieldDescripcionArticulo.getText().trim())){
                JOptionPane.showMessageDialog(this, "El artículo debe tener una descripción", "Información", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldDescripcionArticulo.requestFocus();
                jTextFieldDescripcionArticulo.selectAll();
            } else {
                jComboBoxIvas.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldDescripcionArticuloKeyPressed

    private void jComboBoxIvasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxIvasKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            jComboBoxFamilias.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxIvasKeyPressed

    private void jComboBoxFamiliasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFamiliasKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            jButtonGuardar.requestFocusInWindow();
        }
    }//GEN-LAST:event_jComboBoxFamiliasKeyPressed

    private void jButtonGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonGuardarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonGuardar.doClick();
        }
    }//GEN-LAST:event_jButtonGuardarKeyPressed

    private void jButtonNuevoPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoPrecioActionPerformed
        // TODO add your handling code here:
        MantenimientoPrecios mp = new MantenimientoPrecios(null, true);
        mp.setArticulo(articulo);
        mp.setVisible(true);
    }//GEN-LAST:event_jButtonNuevoPrecioActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        cargarPrecios();
    }//GEN-LAST:event_formFocusGained

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        inicializarTabla();
        cargarPrecios();
        if(articulo != null) {
            jButtonNuevoPrecio.setEnabled(true);
        }
    }//GEN-LAST:event_formWindowActivated

    private void jButtonBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonBuscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonBuscar.doClick();
        }
    }//GEN-LAST:event_jButtonBuscarKeyPressed

    private void jButtonNuevoPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonNuevoPrecioKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonNuevoPrecio.doClick();
        }
    }//GEN-LAST:event_jButtonNuevoPrecioKeyPressed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int resp = JOptionPane.showConfirmDialog(MantenimientoArticulos.this, "Seguro que quiere eliminar el artículo con el codigo " + articulo.getCodigo() + "?", "Pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == JOptionPane.YES_OPTION) {
            try {
                if (sis.eliminarArticulo(articulo)) {
                    reiniciarVentana();
                    JOptionPane.showMessageDialog(MantenimientoArticulos.this, "El Artículo se elimino correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            } catch (HibernateException he) {
                String stakTrace = util.Util.obtenerStackTraceEnString(he);
                SistemaUsuarios.getInstance().registrarExcepcion(he.toString(), stakTrace);
                JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(MantenimientoArticulos.this, "Error al eliminar el artículo." + "\n\n" + he.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    public void reiniciarVentana(){
        articulo = null;
        jTextFieldCodigoArticulo.setText("");
        jTextFieldCodigoArticulo.requestFocus();
        jTextFieldDescripcionArticulo.setText("");
        jTextFieldDescripcionArticulo.setEnabled(false);
        jComboBoxIvas.setSelectedIndex(0);
        jComboBoxIvas.setEnabled(false);
        jComboBoxFamilias.setSelectedIndex(0);
        jComboBoxFamilias.setEnabled(false);
        jButtonGuardar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
        jButtonNuevoPrecio.setEnabled(false);
        inicializarTabla();
        
    }
    
    public void cargarPrecios(){
        if(articulo!=null){
            
            for (int i = 0; i < articulo.getPrecios().size(); i++) {
                Precio p = articulo.getPrecios().get(i);
                Object[] object = new Object[3];
                SimpleDateFormat formatter;
                formatter = new SimpleDateFormat("dd-MM-yyyy");
                object[0] = formatter.format(p.getFecha());
                object[1] = df.format(p.getPrecioCompra()).replace(',', '.');
                object[2] = df.format(p.getPrecioVenta()).replace(',', '.');
                modelo.addRow(object);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MantenimientoArticulos dialog = new MantenimientoArticulos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevoPrecio;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox jComboBoxFamilias;
    private javax.swing.JComboBox jComboBoxIvas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTablePrecios;
    private javax.swing.JTextField jTextFieldCodigoArticulo;
    private javax.swing.JTextField jTextFieldDescripcionArticulo;
    // End of variables declaration//GEN-END:variables
}
