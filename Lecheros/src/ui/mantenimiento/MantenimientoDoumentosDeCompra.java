/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.mantenimiento;

import dominio.DocumentoDeCompra;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import sistema.SistemaMantenimiento;
import sistema.SistemaUsuarios;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class MantenimientoDoumentosDeCompra extends javax.swing.JDialog {

    private SistemaMantenimiento sis;
    private List<DocumentoDeCompra> docs;
    
    private DocumentoDeCompra documentoDeCompra;
    /**
     * Creates new form MantenimientoDoumentosDeCompra
     */
    public MantenimientoDoumentosDeCompra(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sis = SistemaMantenimiento.getInstance();
        documentoDeCompra = new DocumentoDeCompra();
        actualizarListaDocumentosDeCompra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSumaResta = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDocumentos = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jRadioButtonSuma = new javax.swing.JRadioButton();
        jRadioButtonResta = new javax.swing.JRadioButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jRadioButtonEsDocumentoInterno = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Documentos de Compra");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("Documentos de Compra");

        jListDocumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListDocumentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListDocumentos);

        jLabel2.setText("Nombre:");

        buttonGroupSumaResta.add(jRadioButtonSuma);
        jRadioButtonSuma.setText("Suma");

        buttonGroupSumaResta.add(jRadioButtonResta);
        jRadioButtonResta.setText("Resta");

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jRadioButtonEsDocumentoInterno.setText("Documento Interno");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNombre))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jRadioButtonSuma)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonResta))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonEsDocumentoInterno)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 34, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonSuma)
                            .addComponent(jRadioButtonResta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonEsDocumentoInterno)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if("".equals(jTextFieldNombre.getText().trim())){    
            //Es vacio el nombre
            JOptionPane.showMessageDialog(this, "El Documento de Compra debe tener un nombre.","Información",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNombre.requestFocus();
            jTextFieldNombre.selectAll();
        } else {
            try{
            //No es vacio el nomre
            if (jRadioButtonSuma.isSelected() || jRadioButtonResta.isSelected()) {
                if(documentoDeCompra.getTipoDocumento() == null){
                //Hay seleccionado al menos una de las opciones de suma resta
                    DocumentoDeCompra aux = sis.devolverDocumentoDeCompraPorNombre(jTextFieldNombre.getText().trim());
                    if(aux == null) {
                        if(sis.agregarDocumentoDeCompra(jTextFieldNombre.getText(), jRadioButtonSuma.isSelected(), jRadioButtonEsDocumentoInterno.isSelected())){
                            jTextFieldNombre.setText("");
                            actualizarListaDocumentosDeCompra();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al guardar el documento de compra.","Error",JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Ya existe un Documento de Compra con ese nombre. Ingrese un nuevo nombre.", "Información", JOptionPane.INFORMATION_MESSAGE);
                        jTextFieldNombre.requestFocus();
                        jTextFieldNombre.selectAll();
                    }
                } else {
                    if(documentoDeCompra.getTipoDocumento().equals(jTextFieldNombre.getText().trim())){
                        documentoDeCompra.setSuma(jRadioButtonSuma.isSelected());
                        documentoDeCompra.setEsDocumentoInterno(jRadioButtonEsDocumentoInterno.isSelected());
                        if(sis.actualizarDocumentoDeCompra(documentoDeCompra)){
                            jTextFieldNombre.setText("");
                            actualizarListaDocumentosDeCompra();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al guardar el documento de compra.","Error",JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        DocumentoDeCompra aux = sis.devolverDocumentoDeCompraPorNombre(jTextFieldNombre.getText().trim());
                        if(aux == null) {
                            documentoDeCompra.setTipoDocumento(jTextFieldNombre.getText().trim());
                            documentoDeCompra.setSuma(jRadioButtonSuma.isSelected());
                            documentoDeCompra.setEsDocumentoInterno(jRadioButtonEsDocumentoInterno.isSelected());
                            if (sis.actualizarDocumentoDeCompra(documentoDeCompra)) {
                                jTextFieldNombre.setText("");
                                actualizarListaDocumentosDeCompra();
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al guardar el documento de compra.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe un Documento de Compra con ese nombre. Ingrese un nuevo nombre.", "Información", JOptionPane.INFORMATION_MESSAGE);
                            jTextFieldNombre.requestFocus();
                            jTextFieldNombre.selectAll();
                        }
                    } 
                }
            } else {
                //Ninguna de las opciones de suma resta esta seleccionada.
                JOptionPane.showMessageDialog(this, "Debes seleccionar si el documento suma o resta para la liquidación.","Información",JOptionPane.INFORMATION_MESSAGE);
            }
        }catch (Exception e) {
            String stakTrace = util.Util.obtenerStackTraceEnString(e);
            SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
            JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
        } 
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jListDocumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListDocumentosMouseClicked
        // TODO add your handling code here:
        int seleccionado = jListDocumentos.getSelectedIndex();
        if(seleccionado != -1){
            documentoDeCompra  = docs.get(seleccionado);
            jTextFieldNombre.setText(documentoDeCompra.getTipoDocumento());
            jRadioButtonSuma.setSelected(documentoDeCompra.isSuma());
            jRadioButtonResta.setSelected(!documentoDeCompra.isSuma());
            jRadioButtonEsDocumentoInterno.setSelected(documentoDeCompra.isEsDocumentoInterno());
        }
    }//GEN-LAST:event_jListDocumentosMouseClicked

    
    private void actualizarListaDocumentosDeCompra(){
        docs = sis.devolverDocumentosDeCompra();

        DefaultListModel modelo = new DefaultListModel();
        for (DocumentoDeCompra dc : docs) {
            modelo.addElement(dc);
        }

        jListDocumentos.setModel(modelo);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoDoumentosDeCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoDoumentosDeCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoDoumentosDeCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoDoumentosDeCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MantenimientoDoumentosDeCompra dialog = new MantenimientoDoumentosDeCompra(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupSumaResta;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jListDocumentos;
    private javax.swing.JRadioButton jRadioButtonEsDocumentoInterno;
    private javax.swing.JRadioButton jRadioButtonResta;
    private javax.swing.JRadioButton jRadioButtonSuma;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
}
