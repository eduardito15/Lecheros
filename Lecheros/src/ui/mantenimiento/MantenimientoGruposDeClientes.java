/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.mantenimiento;

import dominio.GrupoCliente;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import sistema.SistemaMantenimiento;
import sistema.SistemaUsuarios;
import ui.informes.VentanaInformeCheques;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class MantenimientoGruposDeClientes extends javax.swing.JDialog {

    private final SistemaMantenimiento sis;
    private List<GrupoCliente> gruposDeClientes;
    private GrupoCliente grupoDeCliente;
    /**
     * Creates new form MantenimientoGruposDeClientes
     */
    public MantenimientoGruposDeClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sis = SistemaMantenimiento.getInstance();
        grupoDeCliente = new GrupoCliente();
        actualizarListaGruposDeClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextFieldNombreGrupo = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListGruposDeClientes = new javax.swing.JList();
        jButtonEliminar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Grupo de Clientes");

        jLabel2.setText("Nombre: ");

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jLabel1.setText("Grupos de Clientes");

        jListGruposDeClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListGruposDeClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListGruposDeClientes);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNombreGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldNombreGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        if("".equals(jTextFieldNombreGrupo.getText().trim())){
            JOptionPane.showMessageDialog(this, "El Grupo de Cliente debe tener un nombre.","Información",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNombreGrupo.requestFocus();
            jTextFieldNombreGrupo.selectAll();
        } else {
            //Verifico que no exista un grupo de cliente con ese nombre
            SistemaMantenimiento sm = SistemaMantenimiento.getInstance();
            if (grupoDeCliente.getNombre() == null) {
                //Aca se agrega un nuevo grupo de cliente
                //Verifico que sea un nombre valido, que no este repetido
                if(!nombreValido(jTextFieldNombreGrupo.getText())){
                    JOptionPane.showMessageDialog(this, "Ya existe un grupo de clientes con ese nombre.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldNombreGrupo.requestFocus();
                    jTextFieldNombreGrupo.selectAll();
                } else {
                    try {
                        if (sm.agregarGrupoCliente(jTextFieldNombreGrupo.getText())) {
                            jTextFieldNombreGrupo.setText("");
                            grupoDeCliente = new GrupoCliente();
                            actualizarListaGruposDeClientes();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al guardar el grupo de clientes.","Error",JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (Exception exp) {
                        String stakTrace = util.Util.obtenerStackTraceEnString(exp);
                        SistemaUsuarios.getInstance().registrarExcepcion(exp.toString(), stakTrace);
                        JOptionPane.showMessageDialog(MantenimientoGruposDeClientes.this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                //Aca se actualiza un grupo de cliente existente
                //Chequeo se quiere cambiar el nombre
                if(!grupoDeCliente.getNombre().equals(jTextFieldNombreGrupo.getText())){
                    //Si quiere cambiar el nombre, verifico que sea un nombre valido
                    if (!nombreValido(jTextFieldNombreGrupo.getText())) {
                        JOptionPane.showMessageDialog(this, "Ya existe un grupo de clientes con ese nombre.", "Información", JOptionPane.INFORMATION_MESSAGE);
                        jTextFieldNombreGrupo.requestFocus();
                        jTextFieldNombreGrupo.selectAll();
                    } else {
                        try {
                            //Si el nombre es valido actualizo los datos
                            grupoDeCliente.setNombre(jTextFieldNombreGrupo.getText());
                            sis.actualizarGrupoCliente(grupoDeCliente);
                            jTextFieldNombreGrupo.setText("");
                            grupoDeCliente = new GrupoCliente();
                            actualizarListaGruposDeClientes();
                        } catch (Exception exp) {
                            String stakTrace = util.Util.obtenerStackTraceEnString(exp);
                            SistemaUsuarios.getInstance().registrarExcepcion(exp.toString(), stakTrace);
                            JOptionPane.showMessageDialog(MantenimientoGruposDeClientes.this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    try {
                        //Si no quiere cambiar el nombre todo bien, se guarda con el mismo nombre
                        grupoDeCliente.setNombre(jTextFieldNombreGrupo.getText());
                        sis.actualizarGrupoCliente(grupoDeCliente);
                        jTextFieldNombreGrupo.setText("");
                        grupoDeCliente = new GrupoCliente();
                        actualizarListaGruposDeClientes();
                    } catch (Exception exp) {
                        String stakTrace = util.Util.obtenerStackTraceEnString(exp);
                        SistemaUsuarios.getInstance().registrarExcepcion(exp.toString(), stakTrace);
                        JOptionPane.showMessageDialog(MantenimientoGruposDeClientes.this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }

    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jListGruposDeClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListGruposDeClientesMouseClicked
        // TODO add your handling code here:
        int seleccionado = jListGruposDeClientes.getSelectedIndex();
        if(seleccionado != -1){
            grupoDeCliente = gruposDeClientes.get(seleccionado);
            jTextFieldNombreGrupo.setText(grupoDeCliente.getNombre());
        }
    }//GEN-LAST:event_jListGruposDeClientesMouseClicked

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        try{
            if (grupoDeCliente.getNombre() == null) {
                JOptionPane.showMessageDialog(this, "Para eliminar un grupo de cliente, primero debes seleccionarlo de la lista.");
            } else {
                sis.eliminarGrupoCliente(grupoDeCliente);
                jTextFieldNombreGrupo.setText("");
                grupoDeCliente = new GrupoCliente();
                actualizarListaGruposDeClientes();
            }
        }
        catch (HibernateException e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el chofer." + "\n\n" + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el chofer." + "\n\n" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void actualizarListaGruposDeClientes(){
        gruposDeClientes = sis.devolverGrupoCliente();
        
        DefaultListModel modelo = new DefaultListModel();
        for (GrupoCliente gc : gruposDeClientes) {
            modelo.addElement(gc);
        }
        
        jListGruposDeClientes.setModel(modelo);
    }
    
    private boolean nombreValido(String nom){
        boolean retorno = true;
        for (GrupoCliente gc : gruposDeClientes){
            if(gc.getNombre().equals(nom)){
                retorno = false;
                break;
            }
        }
        return retorno;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoGruposDeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoGruposDeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoGruposDeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoGruposDeClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MantenimientoGruposDeClientes dialog = new MantenimientoGruposDeClientes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListGruposDeClientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldNombreGrupo;
    // End of variables declaration//GEN-END:variables
}
