/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.clientes;

import dao.GenericDAO;
import dominio.Articulo;
import dominio.Cliente;
import dominio.ProductoClienteProrrateo;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import sistema.SistemaMantenimientoArticulos;
import sistema.SistemaUsuarios;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class AgregarProductoClienteProrrateo extends javax.swing.JDialog {

    private Cliente cli;
    private List<ProductoClienteProrrateo> productosClienteProrrateo;

    private SistemaMantenimientoArticulos sisArticulos;

    private Articulo a;
    private ProductoClienteProrrateo productoClienteProrrateo;

    private List<ProductoClienteProrrateo> prodsCliNuevo;

    /**
     * Creates new form AgregarProductoClienteProrrateo
     */
    public AgregarProductoClienteProrrateo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sisArticulos = SistemaMantenimientoArticulos.getInstance();
        jTextFieldCodigo.requestFocus();
    }

    private void actualizarListaProductos() {
        if (cli != null) {
            productosClienteProrrateo = cli.getProductosClienteProrrateo();

            DefaultListModel modelo = new DefaultListModel();
            for (ProductoClienteProrrateo pcp : productosClienteProrrateo) {
                modelo.addElement(pcp);
            }

            jListProductos.setModel(modelo);
        } else {
            DefaultListModel modelo = new DefaultListModel();
            for (ProductoClienteProrrateo pcp : prodsCliNuevo) {
                modelo.addElement(pcp);
            }

            jListProductos.setModel(modelo);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProductos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxFrecuencia = new javax.swing.JComboBox<>();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabelDescripcion = new javax.swing.JLabel();
        jButtonAgregar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButtonQuitar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCantidad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Producto a Cliente Prorrateo");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabelTitulo.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(0, 0, 255));
        jLabelTitulo.setText("Agregar Producto a Cliente Prorrateo");

        jLabel1.setText("Productos");

        jListProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListProductos);

        jLabel2.setText("Codigo:");

        jLabel3.setText("Descripción:");

        jLabel4.setText("Frecuencia:");

        jComboBoxFrecuencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Vez por Semana", "2 Veces por Semana", "3 Veces por Semana", "4 Veces por Semana", "5 Veces por Semana", "6 Veces por Semana", "7 Veces por Semana", "Cada 15 Dias", "1 vez por Mes" }));
        jComboBoxFrecuencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFrecuenciaKeyPressed(evt);
            }
        });

        jTextFieldCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoFocusLost(evt);
            }
        });
        jTextFieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyPressed(evt);
            }
        });

        jLabelDescripcion.setText("Descripción");

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jButtonAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonAgregarKeyPressed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));

        jButtonQuitar.setText("Quitar");
        jButtonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarActionPerformed(evt);
            }
        });

        jLabel5.setText("Cantidad:");

        jTextFieldCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCantidadKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelDescripcion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))
                                    .addComponent(jComboBoxFrecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButtonQuitar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSalir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabelTitulo)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabelDescripcion)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxFrecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQuitar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        actualizarListaProductos();
    }//GEN-LAST:event_formWindowActivated

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        if (a != null) {
            ProductoClienteProrrateo pcp = new ProductoClienteProrrateo();
            pcp.setArticulo(a);
            pcp.setFrecuencia((String) jComboBoxFrecuencia.getSelectedItem());
            try {
                int cantidad = Integer.parseInt(jTextFieldCantidad.getText().trim());
                pcp.setCantidad(cantidad);
                if (cli != null) {
                    cli.getProductosClienteProrrateo().add(pcp);
                    GenericDAO.getGenericDAO().guardar(pcp);
                    GenericDAO.getGenericDAO().actualizar(cli);
                } else {
                    prodsCliNuevo.add(pcp);
                }

                actualizarListaProductos();
                jTextFieldCodigo.setText("");
                jTextFieldCantidad.setText("");
                jLabelDescripcion.setText("");
                jComboBoxFrecuencia.setSelectedIndex(0);
                jTextFieldCodigo.requestFocus();
                jTextFieldCodigo.selectAll();
            } catch (NumberFormatException ne) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldCantidad.requestFocus();
                jTextFieldCantidad.selectAll();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Antes de guardar debe presionar enter para cagar la descripcion del artículo.", "Información", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCantidad.requestFocus();
            jTextFieldCantidad.selectAll();
        }

    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jTextFieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //jTextFieldCantidadRenglon.requestFocus();
            //jTextFieldCantidadRenglon.selectAll();
            if ("".equals(jTextFieldCodigo.getText().trim())) {
                jLabel12.setText("El codigo de producto no es valido.");
                jLabelDescripcion.setText("");
                jTextFieldCodigo.requestFocus();
                jTextFieldCodigo.selectAll();
            } else {
                try {
                    int codigo = Integer.parseInt(jTextFieldCodigo.getText());
                    a = sisArticulos.devolverArticuloPorCodigo(codigo);
                    if (a != null) {
                        jLabelDescripcion.setText(a.getDescripcion());
                        jLabel12.setText("");
                        jTextFieldCantidad.requestFocus();
                        jTextFieldCantidad.selectAll();
                    } else {
                        jLabel12.setText("El codigo de producto no es valido.");
                        jLabelDescripcion.setText("");
                        jTextFieldCodigo.requestFocus();
                        jTextFieldCodigo.selectAll();
                    }
                } catch (NumberFormatException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "El codigo debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldCodigo.requestFocus();
                    jTextFieldCodigo.selectAll();
                } catch (Exception e) {
                    String stakTrace = util.Util.obtenerStackTraceEnString(e);
                    SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                    JOptionPane.showMessageDialog(this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoKeyPressed

    private void jComboBoxFrecuenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFrecuenciaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonAgregar.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxFrecuenciaKeyPressed

    private void jButtonAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAgregarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonAgregar.doClick();
        }
    }//GEN-LAST:event_jButtonAgregarKeyPressed

    private void jButtonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarActionPerformed
        // TODO add your handling code here:
        if (productoClienteProrrateo == null) {
            JOptionPane.showMessageDialog(this, "Para quitar un producto, primero debes seleccionarlo de la lista.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else if (cli != null) {
            cli.getProductosClienteProrrateo().remove(productoClienteProrrateo);
            GenericDAO.getGenericDAO().actualizar(cli);
            GenericDAO.getGenericDAO().borrar(productoClienteProrrateo);
            actualizarListaProductos();
        } else {
            prodsCliNuevo.remove(productoClienteProrrateo);
            actualizarListaProductos();
        }
    }//GEN-LAST:event_jButtonQuitarActionPerformed

    private void jTextFieldCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCantidadKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                Integer.parseInt(jTextFieldCantidad.getText().trim());
                jComboBoxFrecuencia.requestFocus();
            } catch (NumberFormatException ne) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser un numero entero.", "Información", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldCantidad.requestFocus();
                jTextFieldCantidad.selectAll();
            }
        }
    }//GEN-LAST:event_jTextFieldCantidadKeyPressed

    private void jListProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProductosMouseClicked
        // TODO add your handling code here:
        int seleccionado = jListProductos.getSelectedIndex();
        if (seleccionado != -1) {
            if (cli != null) {
                productoClienteProrrateo = cli.getProductosClienteProrrateo().get(seleccionado);
            } else {
                productoClienteProrrateo = prodsCliNuevo.get(seleccionado);
            }
        }
    }//GEN-LAST:event_jListProductosMouseClicked

    private void jTextFieldCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoFocusLost
        // TODO add your handling code here:
        if ("".equals(jTextFieldCodigo.getText().trim())) {
            jLabel12.setText("El codigo de producto no es valido.");
            jLabelDescripcion.setText("");
            jTextFieldCodigo.requestFocus();
            jTextFieldCodigo.selectAll();
        } else {
            try {
                int codigo = Integer.parseInt(jTextFieldCodigo.getText());
                a = sisArticulos.devolverArticuloPorCodigo(codigo);
                if (a != null) {
                    jLabelDescripcion.setText(a.getDescripcion());
                    jLabel12.setText("");
                    jTextFieldCantidad.requestFocus();
                    jTextFieldCantidad.selectAll();
                } else {
                    jLabel12.setText("El codigo de producto no es valido.");
                    jLabelDescripcion.setText("");
                    jTextFieldCodigo.requestFocus();
                    jTextFieldCodigo.selectAll();
                }
            } catch (NumberFormatException e) {
                e.printStackTrace();
                jTextFieldCodigo.setText("");
                jTextFieldCodigo.requestFocus();
                jTextFieldCodigo.selectAll();
            } catch (Exception e) {
                String stakTrace = util.Util.obtenerStackTraceEnString(e);
                SistemaUsuarios.getInstance().registrarExcepcion(e.toString(), stakTrace);
                this.dispose();
                
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarProductoClienteProrrateo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarProductoClienteProrrateo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarProductoClienteProrrateo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarProductoClienteProrrateo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgregarProductoClienteProrrateo dialog = new AgregarProductoClienteProrrateo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonQuitar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<String> jComboBoxFrecuencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDescripcion;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JList<String> jListProductos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldCodigo;
    // End of variables declaration//GEN-END:variables

    /**
     * @param cli the cli to set
     */
    public void setCli(Cliente cli) {
        this.cli = cli;
    }

    /**
     * @param prodsCliNuevo the prodsCliNuevo to set
     */
    public void setProdsCliNuevo(List<ProductoClienteProrrateo> prodsCliNuevo) {
        this.prodsCliNuevo = prodsCliNuevo;
    }

}
