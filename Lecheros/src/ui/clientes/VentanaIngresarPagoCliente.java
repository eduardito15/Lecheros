/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.clientes;

import ui.clientes.VentanaBuscadorClienteTodos;
import dominio.Cliente;
import dominio.Factura;
import dominio.GrupoCliente;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistema.SistemaInformes;
import sistema.SistemaMantenimiento;
import sistema.SistemaUsuarios;
import ui.usuarios.Constantes;

/**
 *
 * @author Edu
 */
public class VentanaIngresarPagoCliente extends javax.swing.JFrame {

    private Cliente cliente;
    private final List<GrupoCliente> grupoDeClientes;
    private final SistemaMantenimiento sis;
    private final SistemaInformes sisInformes;
    private List<Factura> facturas;
    private List<Factura> facturasPagas;
    
    private DefaultTableModel modelo;
    private DefaultTableModel modeloPagas;
    private final DecimalFormat df;
    
    /**
     * Creates new form VentanaConsultaDeudaCliente
     */
    public VentanaIngresarPagoCliente(java.awt.Frame parent, boolean modal) {
        //super(parent, modal);
        initComponents();
        sis = SistemaMantenimiento.getInstance();
        sisInformes = SistemaInformes.getInstance();
        jComboBoxGruposDeClientes.addItem("");
        grupoDeClientes = sis.devolverGrupoCliente();
        for(GrupoCliente gc : grupoDeClientes){
            jComboBoxGruposDeClientes.addItem(gc);
        }
        inicializarTablaFacturas();
        inicializarTablaFacturasPagas();
        df = new DecimalFormat("0.00");
        jComboBoxGruposDeClientes.requestFocus();
    }
    
    public final void inicializarTablaFacturas() {
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelo.addColumn("Cliente");
        modelo.addColumn("Fecha");
        modelo.addColumn("Importe");
        jTableFacturas.setModel(modelo);
    }
    
    public final void inicializarTablaFacturasPagas() {
        modeloPagas = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modeloPagas.addColumn("Cliente");
        modeloPagas.addColumn("Fecha");
        modeloPagas.addColumn("Importe");
        jTableFacturasPagadas.setModel(modeloPagas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelTitulo1 = new javax.swing.JLabel();
        jLabelGrupoCliente = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCliente = new javax.swing.JTextField();
        jButtonConsultar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFacturas = new javax.swing.JTable();
        jComboBoxGruposDeClientes = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableFacturasPagadas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonPasarTodas = new javax.swing.JButton();
        jButtonPasar = new javax.swing.JButton();
        jButtonSacar = new javax.swing.JButton();
        jButtonQuitarTodas = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelPago = new javax.swing.JLabel();
        jButtonGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ingresar Pago");

        jLabelTitulo1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelTitulo1.setForeground(new java.awt.Color(0, 0, 255));
        jLabelTitulo1.setText("Ingresar Pago");

        jLabelGrupoCliente.setText("Grupo Cliente: ");

        jLabel2.setText("Cliente:");

        jTextFieldCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldClienteKeyPressed(evt);
            }
        });

        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });
        jButtonConsultar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonConsultarKeyPressed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        jButtonSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonSalirKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setText("Total:");

        jLabelTotal.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelTotal.setText("0");

        jTableFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cliente", "Fecha", "Importe"
            }
        ));
        jScrollPane1.setViewportView(jTableFacturas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jComboBoxGruposDeClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxGruposDeClientesKeyPressed(evt);
            }
        });

        jTableFacturasPagadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cliente", "Fecha", "Importe"
            }
        ));
        jScrollPane2.setViewportView(jTableFacturasPagadas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setText("Facturas sin Pagar");

        jLabel4.setText("Facturas que Pago");

        jButtonPasarTodas.setText("Pasar Todas");
        jButtonPasarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasarTodasActionPerformed(evt);
            }
        });

        jButtonPasar.setText("Pasar");
        jButtonPasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasarActionPerformed(evt);
            }
        });

        jButtonSacar.setText("Quitar");
        jButtonSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacarActionPerformed(evt);
            }
        });

        jButtonQuitarTodas.setText("Quitar Todas");
        jButtonQuitarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarTodasActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel5.setText("Total:");

        jLabelPago.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelPago.setText("0");

        jButtonGuardar.setText("Guardar (F10)");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabelGrupoCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(jComboBoxGruposDeClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonPasarTodas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonPasar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSacar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonQuitarTodas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotal)
                        .addGap(186, 186, 186)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPago)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonGuardar)
                        .addGap(117, 117, 117))))
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabelTitulo1)
                .addContainerGap(775, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabelTitulo1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGrupoCliente)
                    .addComponent(jButtonConsultar)
                    .addComponent(jComboBoxGruposDeClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelPago)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabelTotal)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButtonPasarTodas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPasar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSacar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQuitarTodas)))
                .addGap(55, 55, 55))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldClienteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if ("".equals(jTextFieldCliente.getText().trim())) {
                    //Es vacio. Le habro el buscador
                    VentanaBuscadorClienteTodos vbc = new VentanaBuscadorClienteTodos(VentanaIngresarPagoCliente.this, true);
                    vbc.setVisible(true);
                    this.cliente = vbc.getCliente();
                    jTextFieldCliente.setText(cliente.getNombre());
                    jButtonConsultar.requestFocus();
                } else {
                    //No es vacio. Busco la cadena en los rut de cliente, si conincide la muestro si no pregunto si quiere volver a ingresarlo o abrir el buscador de clientes.
                    String fraccionDelRut = jTextFieldCliente.getText().trim();
                    cliente = sis.devolverClientePorFraccionDelRut(fraccionDelRut);
                    if (cliente != null) {
                        jTextFieldCliente.setText(cliente.getNombre());
                        jButtonConsultar.requestFocus();
                    } else {
                        int resp = JOptionPane.showConfirmDialog(this, "No existe un cliente que contenga en el rut: " + fraccionDelRut + " . Desea abrir el buscador de clientes?  ", "Pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (resp == JOptionPane.YES_OPTION) {
                            VentanaBuscadorClienteTodos vbc = new VentanaBuscadorClienteTodos(VentanaIngresarPagoCliente.this, true);
                            vbc.setVisible(true);
                            this.cliente = vbc.getCliente();
                            jTextFieldCliente.setText(cliente.getNombre());
                            jButtonConsultar.requestFocus();
                        } else if (resp == JOptionPane.NO_OPTION) {
                            jTextFieldCliente.requestFocus();
                            jTextFieldCliente.selectAll();
                        }
                    }
                }   
            
        }
    }//GEN-LAST:event_jTextFieldClienteKeyPressed

    private void jButtonSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSalirKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonSalir.doClick();
        }
    }//GEN-LAST:event_jButtonSalirKeyPressed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonConsultarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonConsultarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonConsultar.doClick();
        }
    }//GEN-LAST:event_jButtonConsultarKeyPressed

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        // TODO add your handling code here:
        inicializarTablaFacturas();
        facturasPagas = new ArrayList<>();
        double totalDeuda = 0;
        try {
        if (jComboBoxGruposDeClientes.getSelectedIndex() == 0 && "".equals(jTextFieldCliente.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente o un grupo de cliente para la consulta.", "Información", JOptionPane.INFORMATION_MESSAGE);
            jComboBoxGruposDeClientes.requestFocus();
        } else if (jComboBoxGruposDeClientes.getSelectedIndex() != 0 && "".equals(jTextFieldCliente.getText().trim())) {
            //Busco las facturas por grupo de cliente
            GrupoCliente gc = (GrupoCliente) jComboBoxGruposDeClientes.getSelectedItem();
            facturas = sisInformes.devolverFacturasSinPagarPorGrupoDeCliente(gc);
            for (Factura f : facturas) {
                cargarFactura(f);
                totalDeuda = totalDeuda + f.getTotal();
            }
            jLabelTotal.setText(df.format(totalDeuda).replace(',', '.'));
        } else {
            //Busco las facturas para el cliente
            facturas = sisInformes.devolverFacturasSinPagarPorCliente(cliente);
            if (facturas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay facturas sin pagar para: " + cliente.getNombre(), "Información", JOptionPane.INFORMATION_MESSAGE);
                jLabelTotal.setText(df.format(cliente.getDeuda()).replace(',', '.'));
            } else {
                for (Factura f : facturas) {
                    cargarFactura(f);
                    totalDeuda = totalDeuda + f.getTotal();
                }
                jLabelTotal.setText(df.format(totalDeuda).replace(',', '.'));
            }
        }
        } catch (Exception exp) {
            String stakTrace = util.Util.obtenerStackTraceEnString(exp);
            SistemaUsuarios.getInstance().registrarExcepcion(exp.toString(), stakTrace);
            JOptionPane.showMessageDialog(VentanaIngresarPagoCliente.this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jComboBoxGruposDeClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxGruposDeClientesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonConsultar.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxGruposDeClientesKeyPressed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonPasarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasarTodasActionPerformed
        // TODO add your handling code here:
        if(facturas.isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay facturas sin pagar.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            facturasPagas = new ArrayList<>();
            double totalPagas = 0;
            for(Factura f : facturas){
                cargarFacturaPaga(f);
                facturasPagas.add(f);
                totalPagas = totalPagas + f.getTotal();
            }
            jLabelPago.setText(df.format(totalPagas).replace(',', '.'));
            facturas = new ArrayList<>();
            inicializarTablaFacturas();
            jLabelTotal.setText("0");
        }
    }//GEN-LAST:event_jButtonPasarTodasActionPerformed

    private void jButtonQuitarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarTodasActionPerformed
        // TODO add your handling code here:
        inicializarTablaFacturasPagas();
        jLabelPago.setText("0");
        inicializarTablaFacturas();
        facturasPagas = new ArrayList<>();
        double totalDeuda = 0;
        try {
        if (jComboBoxGruposDeClientes.getSelectedIndex() == 0 && "".equals(jTextFieldCliente.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente o un grupo de cliente para la consulta.", "Información", JOptionPane.INFORMATION_MESSAGE);
            jComboBoxGruposDeClientes.requestFocus();
        } else if (jComboBoxGruposDeClientes.getSelectedIndex() != 0 && "".equals(jTextFieldCliente.getText().trim())) {
            //Busco las facturas por grupo de cliente
            GrupoCliente gc = (GrupoCliente) jComboBoxGruposDeClientes.getSelectedItem();
            facturas = sisInformes.devolverFacturasSinPagarPorGrupoDeCliente(gc);
            for (Factura f : facturas) {
                cargarFactura(f);
                totalDeuda = totalDeuda + f.getTotal();
            }
            jLabelTotal.setText(df.format(totalDeuda).replace(',', '.'));
        } else {
            //Busco las facturas para el cliente
            facturas = sisInformes.devolverFacturasSinPagarPorCliente(cliente);
            if (facturas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay facturas sin pagar para: " + cliente.getNombre(), "Información", JOptionPane.INFORMATION_MESSAGE);
                jLabelTotal.setText(df.format(cliente.getDeuda()).replace(',', '.'));
            } else {
                for (Factura f : facturas) {
                    cargarFactura(f);
                    totalDeuda = totalDeuda + f.getTotal();
                }
                jLabelTotal.setText(df.format(totalDeuda).replace(',', '.'));
            }
        }
        } catch (Exception exp) {
            String stakTrace = util.Util.obtenerStackTraceEnString(exp);
            SistemaUsuarios.getInstance().registrarExcepcion(exp.toString(), stakTrace);
            JOptionPane.showMessageDialog(VentanaIngresarPagoCliente.this, Constantes.MensajeDeErrorGenerico, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonQuitarTodasActionPerformed

    private void jButtonPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasarActionPerformed
        // TODO add your handling code here:
        if(jTableFacturas.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una factura sin pagar para pasar a la lista de pagas.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int indiceSeleccionada = jTableFacturas.getSelectedRow();
            Factura f = facturas.get(indiceSeleccionada);
            cargarFacturaPaga(f);
            facturasPagas.add(f);
            double totalPagado = Double.parseDouble(jLabelPago.getText()) + f.getTotal();
            double deuda = Double.parseDouble(jLabelTotal.getText()) - f.getTotal();
            modelo.removeRow(indiceSeleccionada);
            facturas.remove(indiceSeleccionada);
            jLabelPago.setText(df.format(totalPagado).replace(',', '.'));
            jLabelTotal.setText(df.format(deuda).replace(',', '.'));
        }
    }//GEN-LAST:event_jButtonPasarActionPerformed

    private void jButtonSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacarActionPerformed
        // TODO add your handling code here:
        if(jTableFacturasPagadas.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una factura paga para pasar a la lista de no pagadas.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int indiceSeleccionada = jTableFacturasPagadas.getSelectedRow();
            Factura f = facturasPagas.get(indiceSeleccionada);
            modeloPagas.removeRow(indiceSeleccionada);
            double totalPagado = Double.parseDouble(jLabelPago.getText()) - f.getTotal();
            double deuda = Double.parseDouble(jLabelTotal.getText()) + f.getTotal();
            facturas.add(f);
            cargarFactura(f);
            facturasPagas.remove(indiceSeleccionada);
            jLabelPago.setText(df.format(totalPagado).replace(',', '.'));
            jLabelTotal.setText(df.format(deuda).replace(',', '.'));
        }
    }//GEN-LAST:event_jButtonSacarActionPerformed

    public void cargarFactura(Factura f){
        Object[] object = new Object[3];
        object[0] = f.getCliente();
        SimpleDateFormat formatter;
        formatter = new SimpleDateFormat("dd-MM-yyyy");
        object[1] = formatter.format(f.getFecha());
        object[2] = df.format(f.getTotal()).replace(',', '.');
        modelo.addRow(object);
    }
    
    public void cargarFacturaPaga(Factura f){
        Object[] object = new Object[3];
        object[0] = f.getCliente();
        SimpleDateFormat formatter;
        formatter = new SimpleDateFormat("dd-MM-yyyy");
        object[1] = formatter.format(f.getFecha());
        object[2] = df.format(f.getTotal()).replace(',', '.');
        modeloPagas.addRow(object);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaIngresarPagoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaIngresarPagoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaIngresarPagoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaIngresarPagoCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaIngresarPagoCliente dialog = new VentanaIngresarPagoCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonPasar;
    private javax.swing.JButton jButtonPasarTodas;
    private javax.swing.JButton jButtonQuitarTodas;
    private javax.swing.JButton jButtonSacar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox jComboBoxGruposDeClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelGrupoCliente;
    private javax.swing.JLabel jLabelPago;
    private javax.swing.JLabel jLabelTitulo1;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableFacturas;
    private javax.swing.JTable jTableFacturasPagadas;
    private javax.swing.JTextField jTextFieldCliente;
    // End of variables declaration//GEN-END:variables
}
